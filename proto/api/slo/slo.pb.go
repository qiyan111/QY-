// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: slo.proto

package slosv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetricType enumerates the supported service level indicators.
type MetricType int32

const (
	MetricType_METRIC_TYPE_UNSPECIFIED MetricType = 0
	MetricType_LATENCY                 MetricType = 1 // e.g. p99 latency in milliseconds
	MetricType_THROUGHPUT              MetricType = 2 // e.g. requests per second
	MetricType_ERROR_RATE              MetricType = 3 // e.g. 5xx percentage
)

// Enum value maps for MetricType.
var (
	MetricType_name = map[int32]string{
		0: "METRIC_TYPE_UNSPECIFIED",
		1: "LATENCY",
		2: "THROUGHPUT",
		3: "ERROR_RATE",
	}
	MetricType_value = map[string]int32{
		"METRIC_TYPE_UNSPECIFIED": 0,
		"LATENCY":                 1,
		"THROUGHPUT":              2,
		"ERROR_RATE":              3,
	}
)

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}

func (x MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_slo_proto_enumTypes[0].Descriptor()
}

func (MetricType) Type() protoreflect.EnumType {
	return &file_slo_proto_enumTypes[0]
}

func (x MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricType.Descriptor instead.
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return file_slo_proto_rawDescGZIP(), []int{0}
}

// SLOTarget describes a single Service Level Objective target.
type SLOTarget struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Metric MetricType             `protobuf:"varint,1,opt,name=metric,proto3,enum=api.slo.MetricType" json:"metric,omitempty"`
	// For latency objectives, specify the percentile (e.g., 0.99 for p99).
	Percentile float64 `protobuf:"fixed64,2,opt,name=percentile,proto3" json:"percentile,omitempty"`
	// Threshold value â€” interpretation depends on metric type.
	// For latency: milliseconds; throughput: requests per second; error_rate: fraction 0-1.
	Threshold float64 `protobuf:"fixed64,3,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Observation window in seconds (e.g., 86400 for 1-day rolling window).
	WindowSeconds int32 `protobuf:"varint,4,opt,name=window_seconds,json=windowSeconds,proto3" json:"window_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SLOTarget) Reset() {
	*x = SLOTarget{}
	mi := &file_slo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SLOTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOTarget) ProtoMessage() {}

func (x *SLOTarget) ProtoReflect() protoreflect.Message {
	mi := &file_slo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOTarget.ProtoReflect.Descriptor instead.
func (*SLOTarget) Descriptor() ([]byte, []int) {
	return file_slo_proto_rawDescGZIP(), []int{0}
}

func (x *SLOTarget) GetMetric() MetricType {
	if x != nil {
		return x.Metric
	}
	return MetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *SLOTarget) GetPercentile() float64 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *SLOTarget) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *SLOTarget) GetWindowSeconds() int32 {
	if x != nil {
		return x.WindowSeconds
	}
	return 0
}

// TenantSLO groups all SLO targets declared by one tenant (website/app).
type TenantSLO struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TenantId string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Targets  []*SLOTarget           `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	// Optional weight for each target (defaults handled server-side).
	Weights       []float64 `protobuf:"fixed64,3,rep,packed,name=weights,proto3" json:"weights,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TenantSLO) Reset() {
	*x = TenantSLO{}
	mi := &file_slo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantSLO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantSLO) ProtoMessage() {}

func (x *TenantSLO) ProtoReflect() protoreflect.Message {
	mi := &file_slo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantSLO.ProtoReflect.Descriptor instead.
func (*TenantSLO) Descriptor() ([]byte, []int) {
	return file_slo_proto_rawDescGZIP(), []int{1}
}

func (x *TenantSLO) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TenantSLO) GetTargets() []*SLOTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *TenantSLO) GetWeights() []float64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

// ViolationRecord logs an SLO breach event.
type ViolationRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	SloId         string                 `protobuf:"bytes,2,opt,name=slo_id,json=sloId,proto3" json:"slo_id,omitempty"` // hashed index of the target
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`     // unix epoch millis
	ObservedValue float64                `protobuf:"fixed64,4,opt,name=observed_value,json=observedValue,proto3" json:"observed_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViolationRecord) Reset() {
	*x = ViolationRecord{}
	mi := &file_slo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViolationRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViolationRecord) ProtoMessage() {}

func (x *ViolationRecord) ProtoReflect() protoreflect.Message {
	mi := &file_slo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViolationRecord.ProtoReflect.Descriptor instead.
func (*ViolationRecord) Descriptor() ([]byte, []int) {
	return file_slo_proto_rawDescGZIP(), []int{2}
}

func (x *ViolationRecord) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ViolationRecord) GetSloId() string {
	if x != nil {
		return x.SloId
	}
	return ""
}

func (x *ViolationRecord) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ViolationRecord) GetObservedValue() float64 {
	if x != nil {
		return x.ObservedValue
	}
	return 0
}

// TenantCredit represents the real-time credit (higher is better) for a tenant.
type TenantCredit struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TenantId string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Score    float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	// Rolling error budget remaining (0-1).
	BudgetRemaining float64 `protobuf:"fixed64,3,opt,name=budget_remaining,json=budgetRemaining,proto3" json:"budget_remaining,omitempty"`
	// Last updated unix epoch millis.
	UpdateTs      int64 `protobuf:"varint,4,opt,name=update_ts,json=updateTs,proto3" json:"update_ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TenantCredit) Reset() {
	*x = TenantCredit{}
	mi := &file_slo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantCredit) ProtoMessage() {}

func (x *TenantCredit) ProtoReflect() protoreflect.Message {
	mi := &file_slo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantCredit.ProtoReflect.Descriptor instead.
func (*TenantCredit) Descriptor() ([]byte, []int) {
	return file_slo_proto_rawDescGZIP(), []int{3}
}

func (x *TenantCredit) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TenantCredit) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TenantCredit) GetBudgetRemaining() float64 {
	if x != nil {
		return x.BudgetRemaining
	}
	return 0
}

func (x *TenantCredit) GetUpdateTs() int64 {
	if x != nil {
		return x.UpdateTs
	}
	return 0
}

var File_slo_proto protoreflect.FileDescriptor

const file_slo_proto_rawDesc = "" +
	"\n" +
	"\tslo.proto\x12\aapi.slo\"\x9d\x01\n" +
	"\tSLOTarget\x12+\n" +
	"\x06metric\x18\x01 \x01(\x0e2\x13.api.slo.MetricTypeR\x06metric\x12\x1e\n" +
	"\n" +
	"percentile\x18\x02 \x01(\x01R\n" +
	"percentile\x12\x1c\n" +
	"\tthreshold\x18\x03 \x01(\x01R\tthreshold\x12%\n" +
	"\x0ewindow_seconds\x18\x04 \x01(\x05R\rwindowSeconds\"p\n" +
	"\tTenantSLO\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12,\n" +
	"\atargets\x18\x02 \x03(\v2\x12.api.slo.SLOTargetR\atargets\x12\x18\n" +
	"\aweights\x18\x03 \x03(\x01R\aweights\"\x8a\x01\n" +
	"\x0fViolationRecord\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x15\n" +
	"\x06slo_id\x18\x02 \x01(\tR\x05sloId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12%\n" +
	"\x0eobserved_value\x18\x04 \x01(\x01R\robservedValue\"\x89\x01\n" +
	"\fTenantCredit\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12)\n" +
	"\x10budget_remaining\x18\x03 \x01(\x01R\x0fbudgetRemaining\x12\x1b\n" +
	"\tupdate_ts\x18\x04 \x01(\x03R\bupdateTs*V\n" +
	"\n" +
	"MetricType\x12\x1b\n" +
	"\x17METRIC_TYPE_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aLATENCY\x10\x01\x12\x0e\n" +
	"\n" +
	"THROUGHPUT\x10\x02\x12\x0e\n" +
	"\n" +
	"ERROR_RATE\x10\x03B7Z5github.com/example/slo-scheduler/proto/api/slo;slosv1b\x06proto3"

var (
	file_slo_proto_rawDescOnce sync.Once
	file_slo_proto_rawDescData []byte
)

func file_slo_proto_rawDescGZIP() []byte {
	file_slo_proto_rawDescOnce.Do(func() {
		file_slo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_slo_proto_rawDesc), len(file_slo_proto_rawDesc)))
	})
	return file_slo_proto_rawDescData
}

var file_slo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_slo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_slo_proto_goTypes = []any{
	(MetricType)(0),         // 0: api.slo.MetricType
	(*SLOTarget)(nil),       // 1: api.slo.SLOTarget
	(*TenantSLO)(nil),       // 2: api.slo.TenantSLO
	(*ViolationRecord)(nil), // 3: api.slo.ViolationRecord
	(*TenantCredit)(nil),    // 4: api.slo.TenantCredit
}
var file_slo_proto_depIdxs = []int32{
	0, // 0: api.slo.SLOTarget.metric:type_name -> api.slo.MetricType
	1, // 1: api.slo.TenantSLO.targets:type_name -> api.slo.SLOTarget
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_slo_proto_init() }
func file_slo_proto_init() {
	if File_slo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_slo_proto_rawDesc), len(file_slo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_slo_proto_goTypes,
		DependencyIndexes: file_slo_proto_depIdxs,
		EnumInfos:         file_slo_proto_enumTypes,
		MessageInfos:      file_slo_proto_msgTypes,
	}.Build()
	File_slo_proto = out.File
	file_slo_proto_goTypes = nil
	file_slo_proto_depIdxs = nil
}
